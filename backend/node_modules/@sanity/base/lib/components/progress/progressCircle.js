"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProgressCircle = void 0;

var _react = _interopRequireDefault(require("react"));

var _progressCircle = require("./progressCircle.styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var radiusFactor = 1.3;

var ProgressCircle = props => {
  var _props$percent = props.percent,
      percent = _props$percent === void 0 ? 0 : _props$percent,
      text = props.text,
      style = props.style,
      showPercent = props.showPercent,
      isComplete = props.isComplete;
  var radius = 50;
  var strokeWidth = 10;
  var width = radius * 2;
  var height = radius * 2;
  var viewBox = "0 0 ".concat(width, " ").concat(height);
  var dashArray = radius * Math.PI * 2;
  var dashOffset = dashArray - dashArray * percent / 100;
  return /*#__PURE__*/_react.default.createElement(_progressCircle.Root, {
    style: style
  }, /*#__PURE__*/_react.default.createElement("svg", {
    width: width,
    height: height,
    viewBox: viewBox
  }, /*#__PURE__*/_react.default.createElement(_progressCircle.BackgroundCircle, {
    cx: radius,
    cy: radius,
    r: radius - strokeWidth,
    strokeWidth: "".concat(strokeWidth, "px"),
    isComplete: isComplete
  }), /*#__PURE__*/_react.default.createElement(_progressCircle.ForegroundCircle, {
    cx: radius,
    cy: radius,
    r: radius - strokeWidth,
    strokeWidth: "".concat(strokeWidth, "px"),
    style: {
      strokeDasharray: dashArray,
      strokeDashoffset: dashOffset
    },
    isComplete: isComplete
  }), /*#__PURE__*/_react.default.createElement(_progressCircle.ActiveCircle, {
    cx: radius,
    cy: radius,
    r: radius - 1,
    style: {
      strokeDasharray: Math.PI,
      strokeDashoffset: Math.PI
    },
    isComplete: isComplete
  }), showPercent && /*#__PURE__*/_react.default.createElement(_progressCircle.PercentText, {
    x: radius,
    y: text ? radius - 5 : radius,
    dy: ".4em",
    textAnchor: "middle",
    isComplete: isComplete
  }, "".concat(Math.round(percent), "%")), text && /*#__PURE__*/_react.default.createElement(_progressCircle.StatusText, {
    x: radius,
    y: radius * radiusFactor - 5,
    dy: ".4em",
    textAnchor: "middle",
    isComplete: isComplete
  }, text)));
};

exports.ProgressCircle = ProgressCircle;