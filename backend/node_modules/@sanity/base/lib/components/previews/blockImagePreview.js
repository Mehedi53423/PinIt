"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BlockImagePreview = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _blockImagePreview = require("./blockImagePreview.styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var DEFAULT_MEDIA_DIMENSIONS = {
  width: 600,
  height: 400,
  fit: 'fillmax',
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
};

var BlockImagePreview = props => {
  var actions = props.actions,
      title = props.title,
      subtitle = props.subtitle,
      description = props.description,
      _props$fallbackTitle = props.fallbackTitle,
      fallbackTitle = _props$fallbackTitle === void 0 ? 'Untitled' : _props$fallbackTitle,
      _props$mediaDimension = props.mediaDimensions,
      mediaDimensions = _props$mediaDimension === void 0 ? DEFAULT_MEDIA_DIMENSIONS : _props$mediaDimension,
      media = props.media,
      children = props.children,
      status = props.status;
  var getRatio = (0, _react.useCallback)(dimensions => {
    var height = dimensions.height,
        width = dimensions.width;
    return height / width * 100;
  }, []);
  return /*#__PURE__*/_react.default.createElement(_blockImagePreview.RootBox, {
    overflow: "hidden"
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, null, /*#__PURE__*/_react.default.createElement(_blockImagePreview.HeaderFlex, {
    align: "center",
    paddingLeft: 3,
    paddingRight: 1,
    paddingY: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 1,
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    textOverflow: "ellipsis",
    weight: "medium"
  }, title || fallbackTitle), subtitle && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, subtitle)), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center"
  }, status && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginX: 4
  }, typeof status === 'function' ? status({
    layout: 'block'
  }) : status), actions && /*#__PURE__*/_react.default.createElement("div", null, actions))), /*#__PURE__*/_react.default.createElement(_blockImagePreview.MediaCard, {
    __unstable_checkered: true,
    borderTop: true,
    sizing: "border",
    display: "flex",
    tone: "inherit",
    $ratio: getRatio(mediaDimensions)
  }, typeof media === 'function' && media({
    dimensions: mediaDimensions,
    layout: 'block'
  }), typeof media === 'string' && /*#__PURE__*/_react.default.createElement("div", null, media), /*#__PURE__*/_react.default.isValidElement(media) && media)), description && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    paddingX: 2,
    paddingY: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1
  }, typeof description === 'function' ? description({
    layout: 'block'
  }) : description)), children && /*#__PURE__*/_react.default.createElement("div", null, children));
};

exports.BlockImagePreview = BlockImagePreview;