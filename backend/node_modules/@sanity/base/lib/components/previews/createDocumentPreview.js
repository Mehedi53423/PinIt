"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CreateDocumentPreview = CreateDocumentPreview;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _IntentButton = require("../IntentButton");

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var DEFAULT_MEDIA_DIMENSION = {
  width: 80,
  height: 80,
  aspect: 1,
  fit: 'crop'
};
var BLOCK_STYLE = {
  display: 'flex',
  height: '100%',
  width: '100%',
  alignItems: 'flex-start'
};
var Root = (0, _styledComponents.default)(_ui.Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  height: 100%;\n\n  a {\n    color: currentColor;\n    text-decoration: none;\n  }\n\n  svg[data-sanity-icon] {\n    margin: 0;\n  }\n"])));
/**
 * @deprecated
 */

function CreateDocumentPreview(props) {
  var _props$title = props.title,
      title = _props$title === void 0 ? 'Untitled' : _props$title,
      subtitle = props.subtitle,
      _props$media = props.media,
      media = _props$media === void 0 ? props.icon : _props$media,
      isPlaceholder = props.isPlaceholder,
      _props$mediaDimension = props.mediaDimensions,
      mediaDimensions = _props$mediaDimension === void 0 ? DEFAULT_MEDIA_DIMENSION : _props$mediaDimension,
      description = props.description,
      params = props.params,
      templateParams = props.templateParams;

  if (isPlaceholder || !params) {
    return /*#__PURE__*/_react.default.createElement(Root, null, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 3,
      flex: 1
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      as: "h2"
    }, "Loading\u2026"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      as: "p",
      size: 1
    }, "Loading\u2026")), media !== false && /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      align: "flex-start",
      padding: 2
    }));
  }

  var content = /*#__PURE__*/_react.default.createElement(Root, null, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: description ? 'flex-start' : 'center'
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 3,
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "h2",
    style: {
      whiteSpace: 'break-spaces'
    }
  }, typeof title !== 'function' && title, typeof title === 'function' && title({
    layout: 'default'
  })), subtitle && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    as: "p",
    textOverflow: "ellipsis"
  }, typeof subtitle === 'function' && subtitle({
    layout: 'default'
  }) || subtitle), description && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "p",
    size: 1,
    style: {
      whiteSpace: 'break-spaces'
    }
  }, description)), media && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "flex-start",
    paddingLeft: 2
  }, typeof media === 'function' && media({
    dimensions: mediaDimensions,
    layout: 'default'
  }), typeof media === 'string' && /*#__PURE__*/_react.default.createElement("span", null, media), /*#__PURE__*/_react.default.isValidElement(media) && media))));

  return /*#__PURE__*/_react.default.createElement(_IntentButton.IntentButton, {
    intent: "create",
    params: [params, templateParams],
    title: subtitle ? "Create new ".concat(title, " (").concat(subtitle, ")") : "Create new ".concat(title),
    onClick: props.onClick,
    style: BLOCK_STYLE,
    mode: "ghost",
    fontSize: 2
  }, content);
}