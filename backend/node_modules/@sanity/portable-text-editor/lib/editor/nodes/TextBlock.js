"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TextBlock;

var _react = _interopRequireDefault(require("react"));

var _ = require(".");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function TextBlock(props) {
  var portableTextFeatures = props.portableTextFeatures,
      children = props.children,
      element = props.element;
  var style = typeof element.style === 'string' ? element.style : 'normal'; // Should we render a custom style?
  // TODO: Look into this API. This is legacy support for older Sanity Studio versions via the type

  var CustomStyle;
  var blockStyle = portableTextFeatures && style ? portableTextFeatures.styles.find(item => item.value === style) : undefined;

  if (blockStyle) {
    CustomStyle = blockStyle.blockEditor && blockStyle.blockEditor.render;
  }

  var renderedBlock = children;

  if (element.listItem) {
    renderedBlock = /*#__PURE__*/_react.default.createElement(_.DefaultListItem, {
      listStyle: element.listItem || 'bullet',
      listLevel: element.level || 0
    }, /*#__PURE__*/_react.default.createElement(_.DefaultListItemInner, null, renderedBlock));
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, !CustomStyle && renderedBlock, CustomStyle && /*#__PURE__*/_react.default.createElement(CustomStyle, {
    style: style
  }, renderedBlock));
}