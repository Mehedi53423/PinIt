{"version":3,"file":"index.es.js","sources":["../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/components/string.tsx","../src/utils/weak-maps.ts","../src/components/leaf.tsx","../src/hooks/use-isomorphic-layout-effect.ts","../src/components/text.tsx","../src/hooks/use-selected.ts","../src/components/element.tsx","../src/hooks/use-editor.tsx","../src/components/children.tsx","../src/utils/environment.ts","../src/utils/hotkeys.ts","../src/hooks/use-read-only.ts","../src/hooks/use-slate.tsx","../src/utils/dom.ts","../src/components/editable.tsx","../src/utils/key.ts","../src/plugin/react-editor.ts","../src/hooks/use-focused.ts","../src/components/slate.tsx","../src/plugin/with-react.ts"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useEditor } from '..'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useEditor()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\n\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  return (\n    <span data-slate-string>\n      {text}\n      {isTrailing ? '\\n' : null}\n    </span>\n  )\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nconst ZeroWidthString = (props: { length?: number; isLineBreak?: boolean }) => {\n  const { length = 0, isLineBreak = false } = props\n  return (\n    <span\n      data-slate-zero-width={isLineBreak ? 'n' : 'z'}\n      data-slate-length={length}\n    >\n      {'\\uFEFF'}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n","import { Node, Ancestor, Editor, Range } from 'slate'\n\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\n\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_CLICKING: WeakMap<Editor, boolean> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\n","import React from 'react'\nimport { Text, Element } from 'slate'\n\nimport String from './string'\nimport { PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\nimport { RenderLeafProps } from './editable'\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\n\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  if (leaf[PLACEHOLDER_SYMBOL]) {\n    children = (\n      <React.Fragment>\n        <span\n          contentEditable={false}\n          data-slate-placeholder\n          style={{\n            pointerEvents: 'none',\n            display: 'inline-block',\n            width: '0',\n            maxWidth: '100%',\n            whiteSpace: 'nowrap',\n            opacity: '0.333',\n            userSelect: 'none',\n            fontStyle: 'normal',\n            fontWeight: 'normal',\n            textDecoration: 'none',\n          }}\n        >\n          {leaf.placeholder as React.ReactNode}\n        </span>\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text &&\n    Text.matches(next.leaf, prev.leaf)\n  )\n})\n\n/**\n * The default custom leaf renderer.\n */\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n","import { useLayoutEffect, useEffect } from 'react'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when window is not defined\n */\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import React, { useRef } from 'react'\nimport { Range, Element, Text as SlateText } from 'slate'\n\nimport Leaf from './leaf'\nimport { ReactEditor, useEditor } from '..'\nimport { RenderLeafProps } from './editable'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n} from '../utils/weak-maps'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const { decorations, isLast, parent, renderLeaf, text } = props\n  const editor = useEditor()\n  const ref = useRef<HTMLSpanElement>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (!KEY_TO_ELEMENT) {\n      return\n    }\n    if (ref.current) {\n      KEY_TO_ELEMENT.set(key, ref.current)\n      NODE_TO_ELEMENT.set(text, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, text)\n    } else {\n      KEY_TO_ELEMENT.delete(key)\n      NODE_TO_ELEMENT.delete(text)\n    }\n  })\n\n  return (\n    <span data-slate-node=\"text\" ref={ref}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.text === prev.text\n  )\n})\n\nexport default MemoizedText\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n","import React, { useRef } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, NodeEntry, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport Children from './children'\nimport { ReactEditor, useEditor, useReadOnly } from '..'\nimport { SelectedContext } from '../hooks/use-selected'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderElementProps, RenderLeafProps } from './editable'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorate: (entry: NodeEntry) => Range[]\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorate,\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderLeaf,\n    selection,\n  } = props\n  const ref = useRef<HTMLElement>(null)\n  const editor = useEditor()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n\n  let children: JSX.Element | null = (\n    <Children\n      decorate={decorate}\n      decorations={decorations}\n      node={element}\n      renderElement={renderElement}\n      renderLeaf={renderLeaf}\n      selection={selection}\n    />\n  )\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = readOnly ? null : (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text decorations={[]} isLast={false} parent={element} text={text} />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    if (!KEY_TO_ELEMENT) {\n      return\n    }\n    if (ref.current) {\n      KEY_TO_ELEMENT.set(key, ref.current)\n      NODE_TO_ELEMENT.set(element, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, element)\n    } else {\n      KEY_TO_ELEMENT.delete(key)\n      NODE_TO_ELEMENT.delete(element)\n    }\n  })\n\n  return (\n    <SelectedContext.Provider value={!!selection}>\n      {renderElement({ attributes, children, element })}\n    </SelectedContext.Provider>\n  )\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.decorate === next.decorate &&\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    isRangeListEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useEditor()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\n/**\n * Check if a list of ranges is equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nconst isRangeListEqual = (list: Range[], another: Range[]): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    if (!Range.equals(range, other)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport default MemoizedElement\n","import { createContext, useContext } from 'react'\n\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n","import React from 'react'\nimport { Editor, Range, Element, NodeEntry, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from './element'\nimport TextComponent from './text'\nimport { ReactEditor } from '..'\nimport { useEditor } from '../hooks/use-editor'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport { RenderElementProps, RenderLeafProps } from './editable'\n\n/**\n * Children.\n */\n\nconst Children = (props: {\n  decorate: (entry: NodeEntry) => Range[]\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorate,\n    decorations,\n    node,\n    renderElement,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useEditor()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <ElementComponent\n          decorate={decorate}\n          decorations={ds}\n          element={n}\n          key={key.id}\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          selection={sel}\n        />\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return <React.Fragment>{children}</React.Fragment>\n}\n\nexport default Children\n","export const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])/i.test(navigator.userAgent)\n\n// Native beforeInput events don't work well with react on Chrome 75 and older, Chrome 76+ can use beforeInput\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])/i.test(navigator.userAgent)\n","import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  splitBlock: 'shift?+enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n","import { createContext, useContext } from 'react'\n\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport const SlateContext = createContext<[ReactEditor] | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = () => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <SlateProvider> component's context.`\n    )\n  }\n\n  const [editor] = context\n  return editor\n}\n","/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  return value instanceof Node\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    const isLast = offset === node.childNodes.length\n    const direction = isLast ? 'backward' : 'forward'\n    const index = isLast ? offset - 1 : offset\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n","import React, { useEffect, useRef, useMemo, useCallback } from 'react'\nimport {\n  Editor,\n  Element,\n  NodeEntry,\n  Node,\n  Range,\n  Text,\n  Transforms,\n  Path,\n} from 'slate'\nimport throttle from 'lodash/throttle'\nimport scrollIntoView from 'scroll-into-view-if-needed'\n\nimport Children from './children'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  IS_FIREFOX,\n  IS_SAFARI,\n  IS_EDGE_LEGACY,\n  IS_CHROME_LEGACY,\n} from '../utils/environment'\nimport { ReactEditor } from '..'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMRange,\n  isDOMElement,\n  isDOMNode,\n  isDOMText,\n  DOMStaticRange,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_READ_ONLY,\n  NODE_TO_ELEMENT,\n  IS_FOCUSED,\n  PLACEHOLDER_SYMBOL,\n} from '../utils/weak-maps'\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nconst HAS_BEFORE_INPUT_SUPPORT = !(\n  IS_FIREFOX ||\n  IS_EDGE_LEGACY ||\n  IS_CHROME_LEGACY\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: Event) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    style = {},\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    as: Component = 'div',\n    ...attributes\n  } = props\n  const editor = useSlate()\n  const ref = useRef<HTMLDivElement>(null)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isComposing: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n    }),\n    []\n  )\n\n  // Update element-related weak maps with the DOM element ref.\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n  })\n\n  // Whenever the editor updates, make sure the DOM selection state is in sync.\n  useIsomorphicLayoutEffect(() => {\n    const { selection } = editor\n    const domSelection = window.getSelection()\n\n    if (state.isComposing || !domSelection || !ReactEditor.isFocused(editor)) {\n      return\n    }\n\n    const hasDomSelection = domSelection.type !== 'None'\n\n    // If the DOM selection is properly unset, we're done.\n    if (!selection && !hasDomSelection) {\n      return\n    }\n\n    // verify that the dom selection is in the editor\n    const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n    let hasDomSelectionInEditor = false\n    if (\n      editorElement.contains(domSelection.anchorNode) &&\n      editorElement.contains(domSelection.focusNode)\n    ) {\n      hasDomSelectionInEditor = true\n    }\n\n    // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n    if (\n      hasDomSelection &&\n      hasDomSelectionInEditor &&\n      selection &&\n      Range.equals(ReactEditor.toSlateRange(editor, domSelection), selection) &&\n      domSelection.focusNode !== editorElement // Added by Sanity for Chrome compatibility issues\n    ) {\n      return\n    }\n\n    // Otherwise the DOM selection is out of sync, so update it.\n    const el = ReactEditor.toDOMNode(editor, editor)\n    state.isUpdatingSelection = true\n\n    let newDomRange: any\n    try {\n      newDomRange = selection && ReactEditor.toDOMRange(editor, selection)\n    } catch (err) {\n      state.isUpdatingSelection = false\n      return\n    }\n\n    if (newDomRange) {\n      if (Range.isBackward(selection!)) {\n        domSelection.setBaseAndExtent(\n          newDomRange.endContainer,\n          newDomRange.endOffset,\n          newDomRange.startContainer,\n          newDomRange.startOffset\n        )\n      } else {\n        domSelection.setBaseAndExtent(\n          newDomRange.startContainer,\n          newDomRange.startOffset,\n          newDomRange.endContainer,\n          newDomRange.endOffset\n        )\n      }\n      scrollSelectionIntoView(editor, newDomRange)\n    } else {\n      domSelection.removeAllRanges()\n    }\n    state.isUpdatingSelection = false\n  })\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (\n      event: Event & {\n        data: string | null\n        dataTransfer: DataTransfer | null\n        getTargetRanges(): DOMStaticRange[]\n        inputType: string\n        isComposing: boolean\n      }\n    ) => {\n      if (\n        !readOnly &&\n        hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = event.dataTransfer || event.data || undefined\n\n        // These two types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (\n          type === 'insertCompositionText' ||\n          type === 'deleteCompositionText'\n        ) {\n          return\n        }\n\n        event.preventDefault()\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = event.getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange)\n\n            if (!selection || !Range.equals(selection, range)) {\n              Transforms.select(editor, range)\n            }\n          }\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          Editor.deleteFragment(editor)\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (data instanceof DataTransfer) {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              Editor.insertText(editor, data)\n            }\n\n            break\n          }\n        }\n      }\n    },\n    [readOnly]\n  )\n\n  // Attach a native DOM event handler for `beforeinput` events, because React's\n  // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n  // real `beforeinput` events sadly... (2019/11/04)\n  // https://github.com/facebook/react/issues/11211\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n      // @ts-ignore The `beforeinput` event isn't recognized.\n      ref.current.addEventListener('beforeinput', onDOMBeforeInput)\n    }\n\n    return () => {\n      if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n        // @ts-ignore The `beforeinput` event isn't recognized.\n        ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n      }\n    }\n  }, [onDOMBeforeInput])\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useCallback(\n    throttle(() => {\n      if (!readOnly && !state.isComposing && !state.isUpdatingSelection) {\n        const { activeElement } = window.document\n        const el = ReactEditor.toDOMNode(editor, editor)\n        const domSelection = window.getSelection()\n\n        if (activeElement === el) {\n          state.latestElement = activeElement\n          IS_FOCUSED.set(editor, true)\n        } else {\n          IS_FOCUSED.delete(editor)\n        }\n\n        if (!domSelection) {\n          return Transforms.deselect(editor)\n        }\n\n        const { anchorNode, focusNode } = domSelection\n\n        const anchorNodeSelectable =\n          hasEditableTarget(editor, anchorNode) ||\n          isTargetInsideVoid(editor, anchorNode)\n\n        const focusNodeSelectable =\n          hasEditableTarget(editor, focusNode) ||\n          isTargetInsideVoid(editor, focusNode)\n\n        if (anchorNodeSelectable && focusNodeSelectable) {\n          const range = ReactEditor.toSlateRange(editor, domSelection)\n          Transforms.select(editor, range)\n        } else {\n          Transforms.deselect(editor)\n        }\n      }\n    }, 100),\n    [readOnly]\n  )\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    window.document.addEventListener('selectionchange', onDOMSelectionChange)\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        onDOMSelectionChange\n      )\n    }\n  }, [onDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  if (\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === ''\n  ) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <Component\n        // COMPAT: The Grammarly Chrome extension works by changing the DOM\n        // out from under `contenteditable` elements, which leads to weird\n        // behaviors so we have to disable it like editor. (2017/04/24)\n        data-gramm={false}\n        role={readOnly ? undefined : 'textbox'}\n        {...attributes}\n        // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n        // have to use hacks to make these replacement-based features work.\n        spellCheck={\n          !HAS_BEFORE_INPUT_SUPPORT ? undefined : attributes.spellCheck\n        }\n        autoCorrect={\n          !HAS_BEFORE_INPUT_SUPPORT ? undefined : attributes.autoCorrect\n        }\n        autoCapitalize={\n          !HAS_BEFORE_INPUT_SUPPORT ? undefined : attributes.autoCapitalize\n        }\n        data-slate-editor\n        data-slate-node=\"value\"\n        contentEditable={readOnly ? undefined : true}\n        suppressContentEditableWarning\n        ref={ref}\n        style={{\n          // Prevent the default outline styles.\n          outline: 'none',\n          // Preserve adjacent whitespace and new lines.\n          whiteSpace: 'pre-wrap',\n          // Allow words to break if they are too long.\n          wordWrap: 'break-word',\n          // Allow for passed-in styles to override anything.\n          ...style,\n        }}\n        onBeforeInput={useCallback(\n          (event: React.FormEvent<HTMLDivElement>) => {\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n            // fall back to React's leaky polyfill instead just for it. It\n            // only works for the `insertText` input type.\n            if (\n              !HAS_BEFORE_INPUT_SUPPORT &&\n              !readOnly &&\n              !isEventHandled(event, attributes.onBeforeInput) &&\n              hasEditableTarget(editor, event.target)\n            ) {\n              event.preventDefault()\n              const text = (event as any).data as string\n              Editor.insertText(editor, text)\n            }\n          },\n          [readOnly]\n        )}\n        onBlur={useCallback(\n          (event: React.FocusEvent<HTMLDivElement>) => {\n            if (\n              readOnly ||\n              state.isUpdatingSelection ||\n              !hasEditableTarget(editor, event.target) ||\n              isEventHandled(event, attributes.onBlur)\n            ) {\n              return\n            }\n\n            // COMPAT: If the current `activeElement` is still the previous\n            // one, this is due to the window being blurred when the tab\n            // itself becomes unfocused, so we want to abort early to allow to\n            // editor to stay focused when the tab becomes focused again.\n            if (state.latestElement === window.document.activeElement) {\n              return\n            }\n\n            const { relatedTarget } = event\n            const el = ReactEditor.toDOMNode(editor, editor)\n\n            // COMPAT: The event should be ignored if the focus is returning\n            // to the editor from an embedded editable element (eg. an <input>\n            // element inside a void node).\n            if (relatedTarget === el) {\n              return\n            }\n\n            // COMPAT: The event should be ignored if the focus is moving from\n            // the editor to inside a void node's spacer element.\n            if (\n              isDOMElement(relatedTarget) &&\n              relatedTarget.hasAttribute('data-slate-spacer')\n            ) {\n              return\n            }\n\n            // COMPAT: The event should be ignored if the focus is moving to a\n            // non- editable section of an element that isn't a void node (eg.\n            // a list item of the check list example).\n            if (\n              relatedTarget != null &&\n              isDOMNode(relatedTarget) &&\n              ReactEditor.hasDOMNode(editor, relatedTarget)\n            ) {\n              const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n              if (Element.isElement(node) && !editor.isVoid(node)) {\n                return\n              }\n            }\n\n            IS_FOCUSED.delete(editor)\n          },\n          [readOnly, attributes.onBlur]\n        )}\n        onClick={useCallback(\n          (event: React.MouseEvent<HTMLDivElement>) => {\n            if (\n              !readOnly &&\n              hasTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onClick) &&\n              isDOMNode(event.target)\n            ) {\n              const node = ReactEditor.toSlateNode(editor, event.target)\n              const path = ReactEditor.findPath(editor, node)\n              const start = Editor.start(editor, path)\n              const end = Editor.end(editor, path)\n\n              const startVoid = Editor.void(editor, { at: start })\n              const endVoid = Editor.void(editor, { at: end })\n\n              if (\n                startVoid &&\n                endVoid &&\n                Path.equals(startVoid[1], endVoid[1])\n              ) {\n                const range = Editor.range(editor, start)\n                Transforms.select(editor, range)\n              }\n            }\n          },\n          [readOnly, attributes.onClick]\n        )}\n        onCompositionEnd={useCallback(\n          (event: React.CompositionEvent<HTMLDivElement>) => {\n            if (\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onCompositionEnd)\n            ) {\n              state.isComposing = false\n\n              // COMPAT: In Chrome, `beforeinput` events for compositions\n              // aren't correct and never fire the \"insertFromComposition\"\n              // type that we need. So instead, insert whenever a composition\n              // ends since it will already have been committed to the DOM.\n              if (!IS_SAFARI && !IS_FIREFOX && event.data) {\n                Editor.insertText(editor, event.data)\n              }\n            }\n          },\n          [attributes.onCompositionEnd]\n        )}\n        onCompositionStart={useCallback(\n          (event: React.CompositionEvent<HTMLDivElement>) => {\n            if (\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onCompositionStart)\n            ) {\n              state.isComposing = true\n            }\n          },\n          [attributes.onCompositionStart]\n        )}\n        onCopy={useCallback(\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\n            if (\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onCopy)\n            ) {\n              event.preventDefault()\n              ReactEditor.setFragmentData(editor, event.clipboardData)\n            }\n          },\n          [attributes.onCopy]\n        )}\n        onCut={useCallback(\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\n            if (\n              !readOnly &&\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onCut)\n            ) {\n              event.preventDefault()\n              ReactEditor.setFragmentData(editor, event.clipboardData)\n              const { selection } = editor\n\n              if (selection && Range.isExpanded(selection)) {\n                Editor.deleteFragment(editor)\n              }\n            }\n          },\n          [readOnly, attributes.onCut]\n        )}\n        onDragOver={useCallback(\n          (event: React.DragEvent<HTMLDivElement>) => {\n            if (\n              hasTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onDragOver)\n            ) {\n              // Only when the target is void, call `preventDefault` to signal\n              // that drops are allowed. Editable content is droppable by\n              // default, and calling `preventDefault` hides the cursor.\n              const node = ReactEditor.toSlateNode(editor, event.target)\n\n              if (Editor.isVoid(editor, node)) {\n                event.preventDefault()\n              }\n            }\n          },\n          [attributes.onDragOver]\n        )}\n        onDragStart={useCallback(\n          (event: React.DragEvent<HTMLDivElement>) => {\n            if (\n              hasTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onDragStart)\n            ) {\n              const node = ReactEditor.toSlateNode(editor, event.target)\n              const path = ReactEditor.findPath(editor, node)\n              const voidMatch = Editor.void(editor, { at: path })\n\n              // If starting a drag on a void node, make sure it is selected\n              // so that it shows up in the selection's fragment.\n              if (voidMatch) {\n                const range = Editor.range(editor, path)\n                Transforms.select(editor, range)\n              }\n\n              ReactEditor.setFragmentData(editor, event.dataTransfer)\n            }\n          },\n          [attributes.onDragStart]\n        )}\n        onDrop={useCallback(\n          (event: React.DragEvent<HTMLDivElement>) => {\n            if (\n              hasTarget(editor, event.target) &&\n              !readOnly &&\n              !isEventHandled(event, attributes.onDrop)\n            ) {\n              // COMPAT: Certain browsers don't fire `beforeinput` events at all, and\n              // Chromium browsers don't properly fire them for files being\n              // dropped into a `contenteditable`. (2019/11/26)\n              // https://bugs.chromium.org/p/chromium/issues/detail?id=1028668\n              if (\n                !HAS_BEFORE_INPUT_SUPPORT ||\n                (!IS_SAFARI && event.dataTransfer.files.length > 0)\n              ) {\n                event.preventDefault()\n                const range = ReactEditor.findEventRange(editor, event)\n                const data = event.dataTransfer\n                Transforms.select(editor, range)\n                ReactEditor.insertData(editor, data)\n              }\n            }\n          },\n          [readOnly, attributes.onDrop]\n        )}\n        onFocus={useCallback(\n          (event: React.FocusEvent<HTMLDivElement>) => {\n            if (\n              !readOnly &&\n              !state.isUpdatingSelection &&\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onFocus)\n            ) {\n              const el = ReactEditor.toDOMNode(editor, editor)\n              state.latestElement = window.document.activeElement\n\n              // COMPAT: If the editor has nested editable elements, the focus\n              // can go to them. In Firefox, this must be prevented because it\n              // results in issues with keyboard navigation. (2017/03/30)\n              if (IS_FIREFOX && event.target !== el) {\n                el.focus()\n                return\n              }\n\n              IS_FOCUSED.set(editor, true)\n            }\n          },\n          [readOnly, attributes.onFocus]\n        )}\n        onKeyDown={useCallback(\n          (event: React.KeyboardEvent<HTMLDivElement>) => {\n            if (\n              !readOnly &&\n              hasEditableTarget(editor, event.target) &&\n              !isEventHandled(event, attributes.onKeyDown)\n            ) {\n              const { nativeEvent } = event\n              const { selection } = editor\n\n              // COMPAT: Since we prevent the default behavior on\n              // `beforeinput` events, the browser doesn't think there's ever\n              // any history stack to undo or redo, so we have to manage these\n              // hotkeys ourselves. (2019/11/06)\n              if (Hotkeys.isRedo(nativeEvent)) {\n                event.preventDefault()\n\n                if (typeof editor.redo === 'function') {\n                  editor.redo()\n                }\n\n                return\n              }\n\n              if (Hotkeys.isUndo(nativeEvent)) {\n                event.preventDefault()\n\n                if (typeof editor.undo === 'function') {\n                  editor.undo()\n                }\n\n                return\n              }\n\n              // COMPAT: Certain browsers don't handle the selection updates\n              // properly. In Chrome, the selection isn't properly extended.\n              // And in Firefox, the selection isn't properly collapsed.\n              // (2017/10/17)\n              if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'line', reverse: true })\n                return\n              }\n\n              if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'line' })\n                return\n              }\n\n              if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, {\n                  unit: 'line',\n                  edge: 'focus',\n                  reverse: true,\n                })\n                return\n              }\n\n              if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                return\n              }\n\n              // COMPAT: If a void node is selected, or a zero-width text node\n              // adjacent to an inline is selected, we need to handle these\n              // hotkeys manually because browsers won't be able to skip over\n              // the void node with the zero-width space not being an empty\n              // string.\n              if (Hotkeys.isMoveBackward(nativeEvent)) {\n                event.preventDefault()\n\n                if (selection && Range.isCollapsed(selection)) {\n                  Transforms.move(editor, { reverse: true })\n                } else {\n                  Transforms.collapse(editor, { edge: 'start' })\n                }\n\n                return\n              }\n\n              if (Hotkeys.isMoveForward(nativeEvent)) {\n                event.preventDefault()\n\n                if (selection && Range.isCollapsed(selection)) {\n                  Transforms.move(editor)\n                } else {\n                  Transforms.collapse(editor, { edge: 'end' })\n                }\n\n                return\n              }\n\n              if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'word', reverse: true })\n                return\n              }\n\n              if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                event.preventDefault()\n                Transforms.move(editor, { unit: 'word' })\n                return\n              }\n\n              // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n              // fall back to guessing at the input intention for hotkeys.\n              // COMPAT: In iOS, some of these hotkeys are handled in the\n              if (!HAS_BEFORE_INPUT_SUPPORT) {\n                // We don't have a core behavior for these, but they change the\n                // DOM if we don't prevent them, so we have to.\n                if (\n                  Hotkeys.isBold(nativeEvent) ||\n                  Hotkeys.isItalic(nativeEvent) ||\n                  Hotkeys.isTransposeCharacter(nativeEvent)\n                ) {\n                  event.preventDefault()\n                  return\n                }\n\n                if (Hotkeys.isSplitBlock(nativeEvent)) {\n                  event.preventDefault()\n                  Editor.insertBreak(editor)\n                  return\n                }\n\n                if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteBackward(editor)\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteForward(editor)\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteBackward(editor, { unit: 'line' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteForward(editor, { unit: 'line' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteBackward(editor, { unit: 'word' })\n                  }\n\n                  return\n                }\n\n                if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                  event.preventDefault()\n\n                  if (selection && Range.isExpanded(selection)) {\n                    Editor.deleteFragment(editor)\n                  } else {\n                    Editor.deleteForward(editor, { unit: 'word' })\n                  }\n\n                  return\n                }\n              }\n            }\n          },\n          [readOnly, attributes.onKeyDown]\n        )}\n        onPaste={useCallback(\n          (event: React.ClipboardEvent<HTMLDivElement>) => {\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n            // fall back to React's `onPaste` here instead.\n            // COMPAT: Firefox, Chrome and Safari are not emitting `beforeinput` events\n            // when \"paste without formatting\" option is used.\n            // This unfortunately needs to be handled with paste events instead.\n            if (\n              !isEventHandled(event, attributes.onPaste) &&\n              (!HAS_BEFORE_INPUT_SUPPORT ||\n                isPlainTextOnlyPaste(event.nativeEvent)) &&\n              !readOnly &&\n              hasEditableTarget(editor, event.target)\n            ) {\n              event.preventDefault()\n              ReactEditor.insertData(editor, event.clipboardData)\n            }\n          },\n          [readOnly, attributes.onPaste]\n        )}\n      >\n        <Children\n          decorate={decorate}\n          decorations={decorations}\n          node={editor}\n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          selection={editor.selection}\n        />\n      </Component>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * A default memoized decorate function.\n */\n\nconst defaultDecorate = () => []\n\n/**\n * Check if two DOM range objects are equal.\n */\n\nconst isRangeEqual = (a: DOMRange, b: DOMRange) => {\n  return (\n    (a.startContainer === b.startContainer &&\n      a.startOffset === b.startOffset &&\n      a.endContainer === b.endContainer &&\n      a.endOffset === b.endOffset) ||\n    (a.startContainer === b.endContainer &&\n      a.startOffset === b.endOffset &&\n      a.endContainer === b.startContainer &&\n      a.endOffset === b.startOffset)\n  )\n}\n\n/**\n * Check if the target is in the editor.\n */\n\nconst hasTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n}\n\n/**\n * Check if the target is editable and in the editor.\n */\n\nconst hasEditableTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return (\n    isDOMNode(target) &&\n    ReactEditor.hasDOMNode(editor, target, { editable: true })\n  )\n}\n\n/**\n * Check if the target is inside void and in the editor.\n */\n\nconst isTargetInsideVoid = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): boolean => {\n  const slateNode =\n    hasTarget(editor, target) && ReactEditor.toSlateNode(editor, target)\n  return Editor.isVoid(editor, slateNode)\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nconst isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void\n) => {\n  if (!handler) {\n    return false\n  }\n\n  handler(event)\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nconst isDOMEventHandled = (event: Event, handler?: (event: Event) => void) => {\n  if (!handler) {\n    return false\n  }\n\n  handler(event)\n  return event.defaultPrevented\n}\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  const leafEl = domRange.startContainer.parentElement!\n  leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n  scrollIntoView(leafEl, {\n    scrollMode: 'if-needed',\n  })\n  delete leafEl.getBoundingClientRect\n}\n","/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n","import { Editor, Node, Path, Point, Range, Transforms, Descendant } from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  normalizeDOMPoint,\n} from '../utils/dom'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends Editor {\n  insertData: (data: DataTransfer) => void\n  setFragmentData: (data: DataTransfer) => void\n  getFragment: () => Descendant[]\n}\n\nexport const ReactEditor = {\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${JSON.stringify(node)}`\n    )\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (window.document.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (window.document.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const { selection } = editor\n    const domSelection = window.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable ||\n        targetEl.isContentEditable ||\n        !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n\n  setFragmentData(editor: ReactEditor, data: DataTransfer): void {\n    editor.setFragmentData(data)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT && KEY_TO_ELEMENT.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${JSON.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (const text of texts) {\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${JSON.stringify(point)}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = window\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange)\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint(editor: ReactEditor, domPoint: DOMPoint): Point {\n    const [nearestNode, nearestOffset] = normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const voidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n        const range = window.document.createRange()\n        range.setStart(textNode, 0)\n        range.setEnd(nearestNode, nearestOffset)\n        const contents = range.cloneContents()\n        const removals = [\n          ...contents.querySelectorAll('[data-slate-zero-width]'),\n          ...contents.querySelectorAll('[contenteditable=false]'),\n        ]\n\n        removals.forEach(el => {\n          el!.parentNode!.removeChild(el)\n        })\n\n        // COMPAT: Edge has a bug where Range.prototype.toString() will\n        // convert \\n into \\r\\n. The bug causes a loop when slate-react\n        // attempts to reposition its cursor to match the native position. Use\n        // textContent.length instead.\n        // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n        offset = contents.textContent!.length\n        domNode = textNode\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent.\n\n        leafNode = voidNode.querySelector('[data-slate-leaf]')!\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n        domNode = leafNode\n        offset = domNode.textContent!.length\n      }\n\n      // COMPAT: If the parent node is a Slate zero-width space, editor is\n      // because the text node should have no characters. However, during IME\n      // composition the ASCII characters will be prepended to the zero-width\n      // space, so subtract 1 from the offset to account for the zero-width\n      // space character.\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        parentNode.hasAttribute('data-slate-zero-width')\n      ) {\n        offset--\n      }\n    }\n\n    if (!textNode) {\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset }\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection\n  ): Range {\n    const el =\n      domRange instanceof Selection\n        ? domRange.anchorNode\n        : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (domRange instanceof Selection) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        isCollapsed = domRange.isCollapsed\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    const anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset])\n    const focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset])\n\n    return { anchor, focus }\n  },\n}\n","import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n","import React, { useMemo, useState, useCallback, useEffect } from 'react'\nimport { Node } from 'slate'\n\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-editor'\nimport { SlateContext } from '../hooks/use-slate'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Node[]\n  children: React.ReactNode\n  onChange: (value: Node[]) => void\n  [key: string]: unknown\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n  const [key, setKey] = useState(0)\n  const context: [ReactEditor] = useMemo(() => {\n    editor.children = value\n    Object.assign(editor, rest)\n    return [editor]\n  }, [key, value, ...Object.values(rest)])\n\n  const onContextChange = useCallback(() => {\n    onChange(editor.children)\n    setKey(key + 1)\n  }, [key, onChange])\n\n  EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n  useEffect(() => {\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n    }\n  }, [])\n\n  return (\n    <SlateContext.Provider value={context}>\n      <EditorContext.Provider value={editor}>\n        <FocusedContext.Provider value={ReactEditor.isFocused(editor)}>\n          {children}\n        </FocusedContext.Provider>\n      </EditorContext.Provider>\n    </SlateContext.Provider>\n  )\n}\n","import ReactDOM from 'react-dom'\nimport { Editor, Node, Path, Operation, Transforms, Range } from 'slate'\n\nimport { ReactEditor } from './react-editor'\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  NODE_TO_KEY,\n} from '../utils/weak-maps'\nimport { isDOMText, getPlainText } from '../utils/dom'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n */\n\nexport const withReact = <T extends Editor>(editor: T) => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node': {\n        for (const [node, path] of Editor.levels(e, { at: op.path })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node':\n      case 'merge_node':\n      case 'split_node': {\n        for (const [node, path] of Editor.levels(e, {\n          at: Path.parent(op.path),\n        })) {\n          const key = ReactEditor.findKey(e, node)\n          matches.push([path, key])\n        }\n\n        break\n      }\n\n      case 'move_node': {\n        // TODO\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: DataTransfer) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = document.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData('application/x-slate-fragment', encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = document.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    document.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    document.body.removeChild(div)\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    const fragment = data.getData('application/x-slate-fragment')\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      Transforms.insertFragment(e, parsed)\n      return\n    }\n\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        Transforms.insertText(e, line)\n        split = true\n      }\n    }\n  }\n\n  e.onChange = () => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange()\n    })\n  }\n\n  return e\n}\n"],"names":["objectWithoutPropertiesLoose","String","props","isLast","leaf","parent","text","editor","useEditor","path","ReactEditor","findPath","parentPath","Path","isVoid","React","ZeroWidthString","length","Node","string","children","isInline","Editor","isLineBreak","slice","TextString","isTrailing","NODE_TO_INDEX","WeakMap","NODE_TO_PARENT","EDITOR_TO_ELEMENT","ELEMENT_TO_NODE","NODE_TO_ELEMENT","NODE_TO_KEY","EDITOR_TO_KEY_TO_ELEMENT","IS_READ_ONLY","IS_FOCUSED","EDITOR_TO_ON_CHANGE","PLACEHOLDER_SYMBOL","Symbol","Leaf","renderLeaf","DefaultLeaf","Fragment","contentEditable","style","pointerEvents","display","width","maxWidth","whiteSpace","opacity","userSelect","fontStyle","fontWeight","textDecoration","placeholder","attributes","MemoizedLeaf","memo","prev","next","Text","matches","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","decorations","ref","useRef","leaves","SlateText","key","findKey","i","push","id","KEY_TO_ELEMENT","get","current","set","delete","MemoizedText","SelectedContext","createContext","useSelected","useContext","Element","decorate","element","renderElement","p","DefaultElement","selection","readOnly","useReadOnly","Children","node","hasInlines","dir","getDirection","Tag","texts","height","color","outline","position","Provider","value","MemoizedElement","isRangeListEqual","Range","equals","list","another","range","other","EditorContext","Error","isLeafBlock","isElement","concat","n","sel","intersection","ds","dec","d","ElementComponent","TextComponent","IS_IOS","navigator","test","userAgent","MSStream","IS_APPLE","IS_FIREFOX","IS_SAFARI","IS_EDGE_LEGACY","IS_CHROME_LEGACY","HOTKEYS","bold","compose","moveBackward","moveForward","moveWordBackward","moveWordForward","deleteBackward","deleteForward","extendBackward","extendForward","italic","splitBlock","undo","APPLE_HOTKEYS","moveLineBackward","moveLineForward","deleteLineBackward","deleteLineForward","deleteWordBackward","deleteWordForward","extendLineBackward","extendLineForward","redo","transposeCharacter","WINDOWS_HOTKEYS","create","generic","apple","windows","isGeneric","isKeyHotkey","isApple","isWindows","event","isBold","isCompose","isMoveBackward","isMoveForward","isDeleteBackward","isDeleteForward","isDeleteLineBackward","isDeleteLineForward","isDeleteWordBackward","isDeleteWordForward","isExtendBackward","isExtendForward","isExtendLineBackward","isExtendLineForward","isItalic","isMoveLineBackward","isMoveLineForward","isMoveWordBackward","isMoveWordForward","isRedo","isSplitBlock","isTransposeCharacter","isUndo","ReadOnlyContext","SlateContext","useSlate","context","isDOMComment","isDOMNode","nodeType","isDOMElement","isDOMText","isPlainTextOnlyPaste","clipboardData","getData","types","normalizeDOMPoint","domPoint","offset","childNodes","direction","index","getEditableChild","textContent","child","triedForward","triedBackward","getAttribute","getPlainText","domNode","nodeValue","childNode","Array","from","getComputedStyle","getPropertyValue","tagName","HAS_BEFORE_INPUT_SUPPORT","Editable","autoFocus","defaultDecorate","onDOMBeforeInput","propsOnDOMBeforeInput","scrollSelectionIntoView","defaultScrollSelectionIntoView","as","Component","state","useMemo","isComposing","isUpdatingSelection","latestElement","domSelection","getSelection","isFocused","hasDomSelection","type","editorElement","hasDomSelectionInEditor","contains","anchorNode","focusNode","toSlateRange","el","toDOMNode","newDomRange","toDOMRange","err","isBackward","setBaseAndExtent","endContainer","endOffset","startContainer","startOffset","removeAllRanges","focus","useCallback","hasEditableTarget","target","isDOMEventHandled","inputType","data","dataTransfer","undefined","preventDefault","startsWith","targetRange","getTargetRanges","Transforms","select","isExpanded","deleteFragment","unit","insertBreak","DataTransfer","insertData","insertText","addEventListener","removeEventListener","onDOMSelectionChange","throttle","activeElement","document","deselect","anchorNodeSelectable","isTargetInsideVoid","focusNodeSelectable","start","anchor","role","spellCheck","autoCorrect","autoCapitalize","suppressContentEditableWarning","wordWrap","onBeforeInput","isEventHandled","onBlur","relatedTarget","hasAttribute","hasDOMNode","toSlateNode","onClick","hasTarget","end","startVoid","void","at","endVoid","onCompositionEnd","onCompositionStart","onCopy","setFragmentData","onCut","onDragOver","onDragStart","voidMatch","onDrop","files","findEventRange","onFocus","onKeyDown","nativeEvent","Hotkeys","move","reverse","edge","isCollapsed","collapse","onPaste","editable","slateNode","handler","isDefaultPrevented","isPropagationStopped","defaultPrevented","domRange","leafEl","parentElement","getBoundingClientRect","bind","scrollIntoView","scrollMode","Key","constructor","isEditor","unshift","JSON","stringify","isReadOnly","blur","preventScroll","rangeCount","options","editorEl","targetEl","message","includes","closest","isContentEditable","toDOMPoint","point","selector","querySelectorAll","attr","trueLength","parseInt","Math","min","max","domAnchor","domFocus","createRange","startNode","endNode","startEl","isStartAtZeroWidth","endEl","isEndAtZeroWidth","setStart","setEnd","domEl","clientX","x","clientY","y","rect","isPrev","left","top","before","after","caretRangeFromPoint","caretPositionFromPoint","offsetNode","toSlatePoint","nearestNode","nearestOffset","parentNode","textNode","voidNode","leafNode","contents","cloneContents","removals","forEach","removeChild","querySelector","Selection","anchorOffset","focusOffset","collapsed","FocusedContext","useFocused","Slate","onChange","rest","setKey","useState","Object","assign","values","onContextChange","withReact","e","apply","op","levels","edges","attach","trim","r","cloneRange","setEndAfter","zw","isNewline","span","createElement","appendChild","fragment","getFragment","encoded","btoa","encodeURIComponent","setAttribute","setData","div","body","innerHTML","decoded","decodeURIComponent","atob","parsed","parse","insertFragment","lines","split","line","splitNodes","always","ReactDOM","unstable_batchedUpdates"],"mappings":"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"}