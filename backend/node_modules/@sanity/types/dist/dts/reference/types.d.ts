import { Path } from '../paths';
import { SanityDocument } from '../documents';
export interface Reference {
    _type: string;
    _ref: string;
    _key?: string;
    _weak?: boolean;
    _strengthenOnPublish?: {
        type: string;
        weak?: boolean;
        template?: {
            id: string;
            params: Record<string, string | number | boolean>;
        };
    };
}
export interface WeakReference extends Reference {
    _weak: true;
}
export declare type ReferenceFilterSearchOptions = {
    filter?: string;
    params?: Record<string, unknown>;
    tag?: string;
};
export declare type ReferenceFilterResolver = (options: {
    document: SanityDocument;
    parent?: Record<string, unknown> | Record<string, unknown>[];
    parentPath: Path;
}) => ReferenceFilterSearchOptions | Promise<ReferenceFilterSearchOptions>;
declare type FilterOptions = {
    filter: ReferenceFilterResolver;
} | {
    filter: string;
    filterParams?: Record<string, unknown>;
};
export declare type ReferenceOptions = {
    disableNew: boolean;
} & FilterOptions;
export {};
//# sourceMappingURL=types.d.ts.map